%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Mon Jan  7 08:46:00 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 371x525mm 1052 1488 0 () ()
%%BoundingBox: 112 1059 892 1415
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 371x525mm
%%PageBoundingBox: 112 1059 892 1415
1052 1488 cairo_set_page_size
%%EndPageSetup
q 112 1059 780 356 rectclip q
0 g
327.438 1237.066 m 327.438 1222.855 325.777 1209.293 322.453 1196.375 c
 319.316 1183.453 313.965 1172.105 306.398 1162.324 c 299.016 1152.727 289.328
 1145.07 277.332 1139.348 c 265.336 1133.629 250.574 1130.766 233.039 1130.766
 c 182.105 1130.766 l 182.105 1343.363 l 226.949 1343.363 l 243.559 1343.363
 258.141 1340.688 270.688 1335.336 c 283.238 1329.984 293.664 1322.512 301.969
 1312.914 c 310.457 1303.504 316.824 1292.246 321.07 1279.145 c 325.316 
1266.223 327.438 1252.199 327.438 1237.066 c h
327.438 1237.066 m f
445.473 1185.023 m 410.039 1185.023 l 391.77 1130.766 l 332.25 1130.766
 l 394.535 1343.363 l 461.527 1343.363 l 523.812 1130.766 l 464.293 1130.766
 l h
445.473 1185.023 m f
606.145 1130.766 m 583.445 1185.023 l 583.445 1130.766 l 530.293 1130.766
 l 530.293 1343.363 l 596.453 1343.363 l 608.82 1343.363 619.156 1341.426
 627.457 1337.551 c 635.762 1333.859 642.406 1328.785 647.391 1322.328 c
 652.371 1316.051 655.879 1308.672 657.91 1300.18 c 660.125 1291.875 661.23
 1283.109 661.23 1273.883 c 661.23 1265.395 659.938 1257.734 657.355 1250.906
 c 654.773 1244.078 651.543 1238.172 647.668 1233.191 c 643.977 1228.207
 640.008 1224.055 635.762 1220.734 c 631.703 1217.598 628.012 1215.383 624.691
 1214.09 c 631.52 1200.801 638.625 1186.871 646.008 1172.289 c 653.574 1157.895
 660.676 1144.055 667.32 1130.766 c h
606.145 1130.766 m f
743.027 1236.789 m 755.762 1219.812 768.863 1202.094 782.336 1183.641 c
 795.992 1165.184 809.188 1147.562 821.922 1130.766 c 756.039 1130.766 l
 727.801 1168.691 l 727.801 1130.766 l 674.652 1130.766 l 674.652 1343.363
 l 727.801 1343.363 l 727.801 1302.949 l 756.316 1343.363 l 822.199 1343.363
 l h
743.027 1236.789 m f
1.981257 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 1488 cm
113.379 74.758 777.547 352.352 re S Q
Q Q
showpage
%%Trailer
%%EOF
